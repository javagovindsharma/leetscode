// C++ CODE

    int minValue(string s, int k){
        // code here
        unordered_map<char,int> mm;
        for(auto x:s)mm[x]++;
        priority_queue<int> pq;
        for(auto x:mm)pq.push(x.second);
        int ans = 0;
        while(k--){
            int temp = pq.top();
            pq.pop();
            temp--;
            pq.push(temp);
        }
        while(pq.size()){
            int temp = pq.top();
            pq.pop();
            ans+=temp*temp;
        }
        return ans;
    }

// JAVA CODE

    static int minValue(String s, int k){
        // code here
        PriorityQueue<Integer> pq = new PriorityQueue<Integer>(Collections.reverseOrder());
        int mm[] = new int[26];
        Arrays.fill(mm,0);
        for(int i=0;i<s.length();i++){
            mm[s.charAt(i)-'a']++;
        }
        for(int i=0;i<26;i++){
            if(mm[i]!=0)pq.add(mm[i]);
        }
        while(k!=0){
            int temp = pq.remove();
            temp--;
            pq.add(temp);
            k--;
        }
        int ans = 0;
        while(pq.size()!=0){
            int temp = pq.remove();
            ans+=temp*temp;
        }
        return ans;
    }


Time Complexity:- O(N+KLogP)
Space Complexity:- O(1)
