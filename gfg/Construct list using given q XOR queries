// C++ CODE

    vector<int> constructList(int q, vector<vector<int>> &queries) {
        // code here
        int x=0;
        vector<int> ans;
        for(int i=q-1;i>=0;i--){
            if(queries[i][0])x^=queries[i][1];
            else ans.push_back(queries[i][1]^x);
        }
        ans.push_back(x);
        sort(ans.begin(),ans.end());
        return ans;
    }


// JAVA CODE

    public static ArrayList<Integer> constructList(int q, int[][] queries) {
        // code here
        int x=0;
        ArrayList<Integer> ans = new ArrayList<>();
        for(int i=q-1;i>=0;i--){
            if(queries[i][0]==1)x^=queries[i][1];
            else ans.add(queries[i][1]^x);
        }
        ans.add(x);
        Collections.sort(ans);
        return ans;
    }


// Time Complexity:- O(Q*Log(Q))
// Space Complexity:- O(Q)
