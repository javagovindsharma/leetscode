// C++ CODE

    static bool func(Item a,Item b){
        return (double)a.value/a.weight<(double)b.value/b.weight;
    }
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
        sort(arr,arr+n,func);
        double ans = 0;
        for(int i=n-1;i>=0;i--){
            if(W>=arr[i].weight){
                ans+=arr[i].value;
                W-=arr[i].weight;
            }
            else{
                double oneUnit = (double)arr[i].value/arr[i].weight;
                ans+=(double)oneUnit*W;
                return ans;
            }
        }
        return ans;
    }


// JAVA CODE

    double fractionalKnapsack(int W, Item arr[], int n) 
    {
        // Your code here
        Arrays.sort(arr,new Comparator<Item>(){
            public int compare(Item a,Item b){
                if((double)a.value/a.weight<(double)b.value/b.weight)return -1;
                else if((double)a.value/a.weight>(double)b.value/b.weight)return 1;
                return 0;
            }
        });
        double ans = 0;
        for(int i=n-1;i>=0;i--){
            if(W>=arr[i].weight){
                ans+=arr[i].value;
                W-=arr[i].weight;
            }
            else{
                double oneUnit = (double)arr[i].value/arr[i].weight;
                ans+=(double)oneUnit*W;
                return ans;
            }
        }
        return ans;
    }
