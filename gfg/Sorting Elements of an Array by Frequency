// C++ CODE

    static bool func(pair<int,int> &a,pair<int,int> &b){
        if(a.second>b.second)return true;
        else if(a.second<b.second)return false;
        else return a.first<b.first;
    }
    // Complete this function
    // Function to sort the array according to frequency of elements.
    vector<int> sortByFreq(vector<int>& arr) {
        // Your code here
        unordered_map<int,int> mm;
        vector<pair<int,int>> vec;
        vector<int> ans;
        for(auto x:arr)mm[x]++;
        for(auto x:arr)vec.push_back({x,mm[x]});
        sort(vec.begin(),vec.end(),func);
        for(auto x:vec)ans.push_back(x.first);
        return ans;
    }


// JAVA CODE

    public ArrayList<Integer> sortByFreq(int arr[]) {
        // add your code here
        int n = arr.length;
        HashMap<Integer,Integer> mm = new HashMap<>();
        int vec[][] = new int[n][2];
        ArrayList<Integer> ans = new ArrayList<>();
        for(int x:arr)mm.put(x,mm.getOrDefault(x,0)+1);
        for(int i=0;i<n;i++){
            vec[i][0]=arr[i];
            vec[i][1]=mm.get(arr[i]);
        }
        Arrays.sort(vec,new Comparator<int[]>(){
            @Override
            public int compare(int a[],int b[]){
                if(a[1]!=b[1])return b[1]-a[1];
                return a[0]-b[0];
            }
        });
        for(int i=0;i<n;i++)ans.add(vec[i][0]);
        return ans;
    }



// Time Complexity:- O(NlogN)
// Space Complexity:- O(N)
