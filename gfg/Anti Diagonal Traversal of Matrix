// C++ CODE

    vector<int> antiDiagonalPattern(vector<vector<int>> matrix) 
    {
        // Code here
        int n=matrix.size();
        vector<int> ans;
        for(int i=0;i<n;i++){
            int j=0,k=i;
            while(j>=0 && k>=0 && j<n && k<n){
                ans.push_back(matrix[j][k]);
                j++;
                k--;
            }
        }
        for(int i=1;i<n;i++){
            int j=i,k=n-1;
            while(j>=0 && k>=0 && j<n && k<n){
                ans.push_back(matrix[j][k]);
                j++;
                k--;
            }
        }
        return ans;
    }

// JAVA CODE

    public int[] antiDiagonalPattern(int[][] matrix)
    {
        // Code here
        int n=matrix.length;
        int ans[]=new int[n*n];
        int index=0;
        for(int i=0;i<n;i++){
            int j=0,k=i;
            while(j>=0 && k>=0 && j<n && k<n){
                ans[index++]=matrix[j][k];
                j++;
                k--;
            }
        }
        for(int i=1;i<n;i++){
            int j=i,k=n-1;
            while(j>=0 && k>=0 && j<n && k<n){
                ans[index++]=matrix[j][k];
                j++;
                k--;
            }
        }
        return ans;

    }
