// C++ CODE

    void help(Node *root,int &mn,int &mx,int pos){
        if(!root)return;
        mn=min(mn,pos);
        mx=max(mx,pos);
        help(root->left,mn,mx,pos-1);
        help(root->right,mn,mx,pos+1);
    }
    int verticalWidth(Node* root) {
        // code here
        if(!root)return 0;
        int mn=0,mx=0;
        help(root,mn,mx,0);
        return mx+abs(mn)+1;
    }


// JAVA CODE

    static int mn=0,mx=0;
    void help(Node root,int pos){
        if(root==null)return;
        mn=Math.min(mn,pos);
        mx=Math.max(mx,pos);
        help(root.left,pos-1);
        help(root.right,pos+1);
    }
    public int verticalWidth(Node root) {
        // code here.
        if(root==null)return 0;
        mn=0;
        mx=0;
        help(root,0);
        return mx+Math.abs(mn)+1;
    }


// Time Complexity:- O(N)
// Space Complexity:- O(H)
