// JAVA CODE

    public int prefixSuffixString(String s1[],String s2[])
    {
        Map<String,Boolean> mm = new HashMap<>();
        String temp = "",x="";
        for(int j=0;j<s1.length;j++){
            x=s1[j];
            for(int i=0;i<x.length();i++){
                temp = x.substring(0,i+1);
                mm.putIfAbsent(temp,true);
            }
            for(int i=x.length()-1;i>=0;i--){
                temp = x.substring(i,x.length());
                mm.putIfAbsent(temp,true);
            }
        }
        int ans=0;
        for(int i=0;i<s2.length;i++){
            x=s2[i];
            if(mm.get(x)!=null)ans++;
        }
        return ans;
    }
    
    
 // C++ CODE
 
     int prefixSuffixString(vector<string> &s1,vector<string> s2){
        // Code here
        unordered_map<string,bool> mm;
        for(auto x:s1){
            string temp="";
            for(int i=0;i<x.length();i++){
                temp+=x[i];
                mm[temp]=true;
            }
            temp="";
            for(int i=x.length()-1;i>=0;i--){
                temp=x[i]+temp;
                mm[temp]=true;
            }
        }
        int ans=0;
        for(auto x:s2){
            if(mm[x])ans++;
        }
        return ans;
    }
